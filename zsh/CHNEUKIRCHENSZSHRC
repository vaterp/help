# .zshrc interactive configuration file for zsh
# thanks to klapmuetz, caphuso, Mikachu, zshwiki.org.
# first revision: 24mar2007  +chris+

# == OPTIONS

setopt NO_BEEP
setopt C_BASES
setopt OCTAL_ZEROES
setopt PRINT_EIGHT_BIT
setopt SH_NULLCMD
setopt AUTO_CONTINUE
setopt PATH_DIRS
setopt EXTENDED_GLOB
setopt NO_NOMATCH

setopt LIST_PACKED
setopt COMPLETE_IN_WORD
setopt BASH_AUTO_LIST
setopt NO_AUTO_MENU
setopt NO_CORRECT
setopt NO_ALWAYS_LAST_PROMPT

setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_MINUS

setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY

SAVEHIST=9000
HISTSIZE=9000
HISTFILE=~/.zsh_history

LISTMAX=0
REPORTTIME=60
TIMEFMT="%J  %U user %S system %P cpu %MM memory %*E total"
MAILCHECK=0

autoload -Uz compinit && compinit

zstyle ':completion:*' squeeze-slashes true
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' rehash true

# Colors, like ls(1).
# 25mar2007  +chris+
# 25feb2011  +chris+
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32'
zstyle ':completion:*' list-colors ''
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

[ -f ~/.ssh/config ] && : ${(A)ssh_config_hosts:=${${${${(@M)${(f)"$(<~/.ssh/config)"}:#Host *}#Host }:#*\**}:#*\?*}}
[ -f ~/.ssh/known_hosts ] && : ${(A)ssh_known_hosts:=${${${(f)"$(<~/.ssh/known_hosts)"}%%\ *}%%,*}}
zstyle ':completion:*:*:*'                 hosts $ssh_config_hosts $ssh_known_hosts

zstyle ':completion:*:functions'           ignored-patterns '_*'
zstyle ':completion:*:*:*:*:processes*'    force-list always
zstyle ':completion:*:*:kill:*:processes'  insert-ids single
zstyle ':completion:*:*:kill:*:processes'  sort false
zstyle ':completion:*:*:kill:*:processes'  command 'ps -u "$USER"'
zstyle ':completion:*:processes-names'     command "ps -eo cmd= | sed 's:\([^ ]*\).*:\1:;s:\(/[^ ]*/\)::;/^\[/d'"
zstyle ':completion:*:evince::' \
  file-patterns '*.(#i)(dvi|djvu|tiff|pdf|ps|xps)(|.bz2|.gz|.xz|.z) *(-/)' '*'
compdef pkill=killall
compdef ping6=ping
compdef _gnu_generic cat curl df file grep head idn ln localedef
compdef _gnu_generic mv paste tail touch scrot shred watch wc wget zsh
compdef _gnu_generic emacs emacsclient
compdef _git gitk=git-rev-list

# Don't complete the same twice for kill/diff.
# 25nov2010  +chris+
zstyle ':completion:*:(kill|diff):*'    ignore-line yes

# == PROMPT

function cnprompt6 {
  case "$TERM" in
    xterm*|rxvt*)
      precmd() {  print -Pn "\e]0;%m: %~\a" }
      preexec() { printf "\e]0;$HOST: %s\a" $1 };;
  esac
  setopt PROMPT_SUBST
  PS1='%B%m%(?.. %??)%(1j. %j&.)%b %${NDIRS:-2}~%B%(!.%F{red}.%F{yellow})%#${SSH_CLIENT:+%#} %b'
  RPROMPT=''
}

cnprompt6

# == ZLE

# M-DEL should stop at /.
# 25mar2007  +chris+
# 28feb2011  +chris+
WORDCHARS="*?_-.[]~&;$%^+"

# Emacs keybindings
bindkey -e
bindkey "^[m" copy-prev-shell-word

# Standard keybindings
# 07apr2011  +chris+
[[ -n $terminfo[khome] ]] && bindkey $terminfo[khome] beginning-of-line
[[ -n $terminfo[kend]  ]] && bindkey $terminfo[kend]  end-of-line
[[ -n $terminfo[kdch1] ]] && bindkey $terminfo[kdch1] delete-char

# History search with globs
# 21sep2011  +chris+
# and keeping the rest of the line
# 05jun2012  +chris+
autoload -Uz narrow-to-region
function _history-incremental-preserving-pattern-search-backward
{
  local state
  MARK=CURSOR  # magick, else multiple ^R don't work
  narrow-to-region -p "$LBUFFER${BUFFER:+>>}" -P "${BUFFER:+<<}$RBUFFER" -S state
  zle end-of-history
  zle history-incremental-pattern-search-backward
  narrow-to-region -R state
}
zle -N _history-incremental-preserving-pattern-search-backward
bindkey "^R" _history-incremental-preserving-pattern-search-backward
bindkey -M isearch "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward

# Quote stuff that looks like URLs automatically.
# 19jul2008  +chris+
autoload -U url-quote-magic
zle -N self-insert url-quote-magic

# Edit command line with $VISUAL.
# 26jul2010  +chris+
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# Force file name completion on C-x TAB, Shift-TAB.
# 23dec2010  +chris+
zle -C complete-files complete-word _generic
zstyle ':completion:complete-files:*' completer _files
zstyle ':completion:complete-files:*' force-list always
bindkey "^X^I" complete-files
bindkey "^[[Z" complete-files

# Force menu on C-x RET.
# 29dec2010  +chris+
# 21sep2011  +chris+
bindkey "^X^M" menu-complete

# Move to where the arguments belong.
# 24dec2010  +chris+
after-first-word() {
  zle beginning-of-line
  zle forward-word
}
zle -N after-first-word
bindkey "^X1" after-first-word

# Complete in history with M-/, M-,
zstyle ':completion:history-words:*' list no 
zstyle ':completion:history-words:*' menu yes
zstyle ':completion:history-words:*' remove-all-dups yes
bindkey "\e/" _history-complete-older
bindkey "\e," _history-complete-newer

# Complete from tmux pane.
# http://blog.plenz.com/2012-01/zsh-complete-words-from-tmux-pane.html
# 20jan2012  +chris+
_tmux_pane_words() {
  local expl
  local -a w
  if [[ -z "$TMUX_PANE" ]]; then
    _message "not running inside tmux!"
    return 1
  fi
  w=( ${(u)=$(tmux capture-pane \; show-buffer \; delete-buffer)} )
  _wanted values expl 'words from current tmux pane' compadd -a w
}
zle -C tmux-pane-words-prefix   complete-word _generic
bindkey '^X^T' tmux-pane-words-prefix
zstyle ':completion:tmux-pane-words-prefix:*' completer _tmux_pane_words
zstyle ':completion:tmux-pane-words-prefix:*' ignore-line current

# fg editor on ^Z
# 27sep2011  +chris+
# 17feb2012  +chris+
foreground-vi() {
  fg %vi
}
zle -N foreground-vi
bindkey '^Z' foreground-vi

# Allow to recover from C-c or failed history expansion (thx Mikachu).
# 26may2012  +chris+
function _recover_line_or_else() {
  if [[ -z $BUFFER && $CONTEXT = start && $zsh_eval_context = shfunc
        && -n $ZLE_LINE_ABORTED
        && $ZLE_LINE_ABORTED != $history[$((HISTCMD-1))] ]]; then
    LBUFFER+=$ZLE_LINE_ABORTED
    unset ZLE_LINE_ABORTED
  else
    zle .$WIDGET
  fi
}
zle -N up-line-or-history _recover_line_or_else
function _zle_line_finish() {
  ZLE_LINE_ABORTED=$BUFFER
}
zle -N zle-line-finish _zle_line_finish

# backward-kill-default-word (with $WORDCHARS from zsh -f)
# 26jun2012  +chris+
function _backward_kill_default_word() {
  WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>' zle backward-kill-word
}
zle -N backward-kill-default-word _backward_kill_default_word
bindkey '\e=' backward-kill-default-word   # = is next to backspace

# == ALIASES

alias ls="LC_COLLATE=C /bin/ls -F --dereference-command-line-symlink-to-dir --color=auto"
alias sort="LC_ALL=C /usr/bin/sort"
alias vi="vim -p"
alias mc="/usr/bin/mc -c"
alias texclean='rm -f *.toc *.aux *.log *.cp *.fn *.tp *.vr *.pg *.ky'
alias dotf='ls .[a-zA-Z0-9_]*'
alias vil='vim *(.om[1]^D)'
alias mtr='/usr/sbin/mtr -t'
alias netcfg='sudo netcfg'
alias packer='COLOR=NO packer'
alias cad='cat >/dev/null'

autoload zmv
alias zzmv='noglob zmv -W'

hash -d mess=~/mess/current
hash -d uni=~/uni/current
hash -d wwwtmp=chneukirchen.org:/home/domains/chneukirchen.org/sites/chneukirchen.org/tmp

# == MISC

umask 002

# mess -- switch to current mess folder, creating it if needed
# 17may2008  +chris+
mess() {
  set +e
  DIR=~/mess/$(date +%Y/%V)
  [[ -d $DIR ]] || {
    mkdir -p $DIR
    ln -sfn $DIR ~/mess/current
    echo "Created $DIR."
  }
  cd ~/mess/current
}

# 29feb2008  +chris+
# allow completion, 13apr2010  +chris+
alias homegit="GIT_DIR=~/prj/dotfiles/.git git"

# preserve cd -, 21feb2011  +chris+
# save full dirstack, adopted from grml, 12feb2012  +chris+
DIRSTACKSIZE=9
DIRSTACKFILE=~/.zdirs
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  [[ -d $dirstack[1] ]] && cd $dirstack[1] && cd $OLDPWD
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

# translate -- grep de-en dictionary
# 22feb2010  +chris+
translate() { grep -i -w -e $1 ~/.translate.de-en } 

# mcd -- mkdir and cd at once
# 16may2010  +chris+
# 12feb2012  +chris+
mcd() { mkdir -p "$1" && cd "$1" }

# img -- display given or all images with the currently preferred viewer
# 01jun2010  +chris+
img() {
  sxiv -rfd ${*:-.}
}

# h -- grep history
# 08mar2011  +chris+
# 14mar2011  +chris+
# 08dec2011  +chris+
h() {
  fc -l 0 -1 | sed -n "/$1/s/^ */!/p" | tail -n ${2:-10}
}
alias h=' h'

# sucdo -- su -c like sudo without quotes
# 21mar2011  +chris+
sucdo() {
  su -c "${(pj: :)@}"
}
compdef sucdo=sudo

# pstop -- ps with top-like output
# 16aug2011  +chris+
pstop() {
  ps -eo pid,user,pri,ni,vsz,rsz,stat,pcpu,pmem,time,comm --sort -pcpu |
    head "${@:--n 20}"
}

# sfetch (sftp|scp)://HOST/PATH [DEST] -- file by scp/sftp with resuming
# 19sep2011  +chris+
sfetch() {
  curl -k -u $USER -C- ${2:--O}${2:+-o $2} $1
}

# zman -- easier browsing of zsh manpage
# 20sep2011  +chris+
zman() {
  PAGER="less -g -s '+/^       "$1"'" man zshall
}

# g -- call grep recursively with useful defaults
# 02oct2011  +chris+
# 10jan2012  +chris+  take an directory as possible last argument
g() {
  local p=$argv[-1]
  [[ -d $p ]] && { p=$p/; argv[-1]=(); } || p=''
  grep -P ${@:?regexp missing} \
    ${p}**/*~((*/)#(.bzr|.git|.hg|.svn|CVS|RCS|_darcs)/*|*~|*.o|tags)(D.)
}

# l -- find file names, recursively
# 20jun2012  +chris+  take an directory as possible last argument
l() {
  local p=$argv[-1]
  [[ -d $p ]] && { argv[-1]=(); } || p='.'
  find $p ! -type d | sed 's:^./::' | egrep "${@:-.}"
}

# use-context -- enable ConTeXt paths
# 16aug2011  +chris+
use-context() {
  export TEXMFOS=/opt/context-minimals/texmf-linux-64
  export TEXMFCACHE=$HOME/.cache/texmf-cache
  export PATH=$TEXMFOS/bin:$PATH
  export OSFONTDIR="$HOME/.fonts;/usr/share/fonts;"
}

# pacgrep -- search arch package contents
# 21nov2011  +chris+
# 08dec2011  +chris+
pacgrep() {
  PATTERN=${1:?pattern missing}
  shift
  pacman -Qlq "$@" | xargs grep -d skip -e "$PATTERN"
}
_pacgrep() {
  _pacman  # force autoload
  _arguments : '1:pattern:' '*:package:_pacman_completions_installed_packages'
}
compdef _pacgrep pacgrep

# == SPECIAL ENVIRONMENTS

case "$TERM" in
  9term|win)
    export LS_COLORS=
    zstyle ':completion:*' list-colors ''
    zstyle ':completion:*:default' list-colors ''
    alias ls="LC_COLLATE=C /bin/ls -F --color=never"

    setopt SINGLE_LINE_ZLE NO_PROMPT_SP
    export PAGER=cat
    
    [[ -n "$SSH_CLIENT" ]] && local sig="%#%#" || local sig="%#"
    PS1="%m%(?.. %??)%(1j. %j&.) %2~$sig "
    RPROMPT=""

    alias vi="TERM=xterm gvim -p"
    alias vim=vi
esac
